[{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/douoduublog/tags/django/","section":"Tags","summary":"","title":"Django","type":"tags"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/douoduublog/","section":"doudouu","summary":"","title":"doudouu","type":"page"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/douoduublog/categories/python/","section":"分類","summary":"","title":"python","type":"categories"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/douoduublog/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/douoduublog/categories/","section":"分類","summary":"","title":"分類","type":"categories"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/douoduublog/posts/","section":"文章","summary":"","title":"文章","type":"posts"},{"content":"前言 # 安裝 Django、MTV 模式中的 Template (T) 與 View (V) 實作練習\n本篇文章將介紹如何使用 Django 建立一個 about 頁面。\n首先，先分享完整ＣＲＵＤ流程!!!\n本篇文章將實作 T (Template) 和 V (View) 的部分。 一、MVC 與 MTV 模式簡介 # 1.1 MVC（Model-View-Controller） # M（Model，模型）：負責與資料庫交互，執行 CRUD（新增、讀取、更新、刪除）。 V（View，視圖）：負責處理業務邏輯並渲染頁面。 C（Controller，控制器）：處理 Request、Response，管理 Model 與 View 之間的交互。 1.2 MTV（Model-Template-View） # Django 採用 MTV 模式，概念上類似 MVC，但有所區別：\nM（Model）：與 MVC 的 Model 相同。 T（Template）：負責前端頁面（HTML、CSS、JavaScript）。 V（View）：負責處理請求並回傳適當的模板頁面。 Django 的 Controller 角色由框架本身處理。 二、安裝 Django 並建立專案 # 2.1 使用 Poetry 安裝 Django # 建議使用 Poetry 來建立虛擬環境並安裝 Django。\npoetry new myproject cd myproject poetry add django 注意：確保 app 資料夾 必須放在 專案根目錄，並寫入 settings.py 的 INSTALLED_APPS 內。\n2.2 建立 Django 專案 # django-admin startproject pydev . 注意：最後的 . 代表將專案初始化在目前目錄。\n2.3 設定專案 URL # 在 pydev/urls.py 中新增路由：\nfrom django.contrib import admin from django.urls import path, include urlpatterns = [ path(\u0026#34;admin/\u0026#34;, admin.site.urls), path(\u0026#34;\u0026#34;, include(\u0026#34;pages.urls\u0026#34;)), ] include(\u0026quot;pages.urls\u0026quot;) 允許我們將應用程式的 URL 組織到單獨的 urls.py 檔案。\n三、建立 about 頁面 # 3.1 建立 pages 應用程式 # python manage.py startapp pages 在 pages/ 內建立 以下結構：\npages/ │── migrations/ │── templates/ │ └── pages/ │ └── about.html │── views.py │── urls.py 3.2 設定 pages/urls.py # from django.urls import path from pages.views import about urlpatterns = [ path(\u0026#34;about/\u0026#34;, about), ] 3.3 設定 pages/views.py # from django.shortcuts import render def about(request): return render(request, \u0026#34;pages/about.html\u0026#34;) 3.4 建立 about.html # 建立 pages/templates/pages/about.html：\n{% extends \u0026#34;shared/layout.html\u0026#34; %} {% block content %} \u0026lt;h1\u0026gt;About\u0026lt;/h1\u0026gt; {% endblock %} 3.5 建立 layout.html # 建立 templates/shared/layout.html：\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;My Django App\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; {% block content %}{% endblock %} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 注意：必須確保 settings.py 中 TEMPLATES 設定的 DIRS 內包含 templates/ 目錄，否則無法找到 layout.html。\nTEMPLATES = [ { \u0026#34;BACKEND\u0026#34;: \u0026#34;django.template.backends.django.DjangoTemplates\u0026#34;, \u0026#34;DIRS\u0026#34;: [\u0026#34;templates\u0026#34;], \u0026#34;APP_DIRS\u0026#34;: True, \u0026#34;OPTIONS\u0026#34;: {...}, }, ] 四、啟動伺服器並測試 # python manage.py runserver 打開瀏覽器，訪問 http://127.0.0.1:8000/about/，應該可以看到 about 頁面。\n五、Django 註解語法 # {% comment %} 這是一個 Django 註解 {% endcomment %} Django 使用 Django Template Language (DTL)，雖然語法類似 Jinja2，但實際上是 Django 獨有的模板語言。\n六、結論 # 本篇文章示範了 如何使用 Django 建立一個簡單的 about 頁面，並介紹了 MTV 模式中的 Template (T) 與 View (V)。\n重點回顧：\n使用 Poetry 安裝 Django 並建立專案。 建立 Django 應用程式 pages 並新增路由與視圖。 使用 render 方法回傳 HTML 模板。 設定 layout.html 讓多個頁面共用模板結構。 希望這篇文章能幫助你更快掌握 Django 的基本概念！🚀\n","date":"22 November 2024","externalUrl":null,"permalink":"/douoduublog/posts/%E4%BD%BF%E7%94%A8django%E5%81%9A%E4%B8%80%E5%80%8B%E9%A0%81%E9%9D%A2/","section":"文章","summary":"\u003ch2 class=\"relative group\"\u003e前言 \n    \u003cdiv id=\"%E5%89%8D%E8%A8%80\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e安裝 Django、MTV 模式中的 Template (T) 與 View (V) 實作練習\u003c/p\u003e\n\u003cp\u003e本篇文章將介紹如何使用 Django 建立一個 \u003ccode\u003eabout\u003c/code\u003e 頁面。\u003c/p\u003e","title":"使用 Django 建立一個頁面","type":"posts"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/douoduublog/tags/%E8%BB%9F%E9%AB%94%E6%95%99%E5%AD%B8/","section":"Tags","summary":"","title":"軟體教學","type":"tags"},{"content":"","date":"17 November 2024","externalUrl":null,"permalink":"/douoduublog/tags/%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D/","section":"Tags","summary":"","title":"環境安裝","type":"tags"},{"content":" 前言 # 在進入 Python 領域之前，建議先安裝相關工具與套件，這樣可以邊學習邊實作，提高學習效率。本篇文章將介紹 Python 環境安裝的各種方式，適用於 macOS 使用者。\n一、安裝 Python # 首先，需要從 Python 官網下載並安裝最新版本，安裝完成後可進行以下步驟確認安裝是否成功。\n1.1 在終端機輸入以下指令： # which python3 # 檢查 Python3 位置 python3 # 進入 Python 互動模式（REPL） exit() 或 按 Control+D # 離開 Python 環境 二、了解 REPL 環境 # REPL（Read-Eval-Print-Loop） 是 Python 內建的交互式執行環境。\n在這個環境底下會讀取輸入的指令，然後評估是否可執行。\n如果可以就把結果印出來，不行就會出現錯誤的訊息。\n最後不管能不能執行，都會進入下一個指令的迴圈。\n讀取（Read）：讀取使用者輸入的指令。 評估（Eval）：執行輸入的指令。 輸出（Print）：印出執行結果。 循環（Loop）：回到下一個指令輸入。 適合進行 簡單測試 或 程式驗證。 三、安裝 pyenv # pyenv 是什麼：pyenv 是一款管理 多個 Python 版本 的工具，可以輕鬆切換不同版本。\n3.1 安裝 pyenv # 請參考官方文件：pyenv 官方安裝指南\n3.2 常用指令 # 在終端機輸入以下內容，並分別為：\nwhich pyenv # 確認 pyenv 位置 pyenv #出現指令 pyenv -v # 查看 pyenv 版本 pyenv install --list # 列出可安裝的 Python 版本 pyenv install 3.12.4 # 安裝指定版本，可下載最新的 pyenv global 3.12.4 # 設定預設 Python 版本，此時就可以隨意打python不用加3 pyenv versions # 列出已安裝的 Python 版本 pyenv shell 3.12.4 #若沒改成預設值，可以用叫的叫出這個版本 四、安裝 VS Code # 安裝後可透過快捷鍵提升開發效率。\n4.1 常用快捷鍵 # Command+Shift+P # 開啟命令面板 Control+` # 開啟終端機 Command+D # 選取下一個相同項目 Option+Shift+↓ # 複製整行 Command+/ # 註解/取消註解 直接再游標那行按複製 #可貼上到任一游標處 Option+游標處＋上下鍵 #可移動整行 五、執行第一個 Python 程式 # 5.1 使用內建終端機 # cd 資料夾名稱 # 切換到目標資料夾 ls -al # 查看資料夾內容 python3 檔案名稱.py # 執行 Python 程式，例如：python3 hi.py 5.2 在 VS Code 執行 # pwd # 確認當前目錄 python3 檔案名稱.py # 執行 Python 程式，例如：python3 hi.py 六、安裝 Python 套件 # 6.1 使用 pip 安裝套件 # 先到 PyPI 的網站，例如要下載 request 套件，搜尋 request。\n複製指令到 Vscode 的終端機安裝。\npip install requests # 安裝 requests 套件 pip uninstall requests # 卸載 requests (但不會全部刪掉，會有混雜的套件留存，造成空間浪費) pip list # 查看已安裝的套件 七、建立虛擬環境（venv） # 目的：不會影響其他專案，因為同樣套件只能安裝一個版本，所以沒加會覆蓋。\n7.1 建立虛擬環境 # 以下內容-m 是指載入，venv 是內建虛擬模組，myenv 是自己取的虛擬環境名字\npython -m venv myenv # 建立名為 myenv 的虛擬環境 python -m venv myenv --prompt=\u0026#34;hello\u0026#34; #如同上述，不過這行--prompt=\u0026#34;自己取名字\u0026#34;，為Vscode開啟終端機時「名稱」會變hello 7.2 啟動虛擬環境 # 左側欄位會出現一個 myenv 資料夾，裡面有一些資料夾，在使用虛擬環境時，不太管它。但啟動虛擬環境，裡面有一個 bin 資料夾，底下有 activate，執行輸入。\nsource myenv/bin/activate # 啟動虛擬環境 7.3 在虛擬環境內安裝套件 # pip install django # 安裝 Django pip list #若要看內容，領域展開，輸入以上 pip freeze \u0026gt; requirements.txt # 產生套件清單 pip install -r requirements.txt # 依據套件清單安裝 7.4 停用虛擬環境 # deactivate # 離開虛擬環境 八、使用 Poetry 進行套件管理 # Poetry 是一款現代化的 Python 套件管理工具，提供 安裝、版本控制、打包與發布 等功能。\n8.1 安裝 Poetry # pip install poetry # 安裝 Poetry 8.2 初始化或安裝 Poetry 專案 # 8.2.1 建立新專案 # 如果是全新的專案，可以使用 poetry new 來建立專案目錄，並自動生成 pyproject.toml：\npoetry new myproject # 建立新專案 cd myproject # 進入專案目錄 pwd #確認輸入位置沒錯 8.2.2 在現有專案初始化 Poetry # 如果你已經有一個資料夾，並希望使用 Poetry 來管理它，請執行：\ncd existing_project # 進入現有專案目錄 poetry init # 初始化 Poetry，建立 pyproject.toml 8.2.3 安裝專案依賴 # 當 pyproject.toml 檔案已經存在時（無論是透過 poetry new 或 poetry init 建立），使用以下指令來安裝所有依賴：\npoetry install # 根據 pyproject.toml 安裝所有依賴，創一個.venv資料夾 8.3 使用 Poetry 管理套件 # poetry shell #先切換到虛擬目錄裡面，在poetry執行 poetry add requests # 安裝套件，例如套件名稱為requests poetry remove requests # 移除 requests 套件，或是可以刪掉資料夾 pip list #看內容 poetry show #可以看裝的套件及版本資訊（較詳細） poetry show --tree # 查看依賴樹狀結構 poetry add pre-commit --group dev #裝到不同群組裡佈置時使用 poetry env info #看poetry位置裝到哪 poetry env remove 位置 #刪除指定位置虛擬環境 poetry cofing --list #檢查內容 九、語意化版本控制 # 在 pyproject.toml 內使用 語意化版本規則 來管理依賴。\n\u0026#34;^5.0.3\u0026#34; # ^是中間數字0有跳動，會自動抓到新版本，是部分更動，升級中間的版本 \u0026#34;~5.0.3\u0026#34; # 允許修正版本更新，但不變更次要版本，~是3有跳動，只裝這個後面的，算是小地方更動 \u0026#34;\u0026gt;=5.0.3\u0026#34; # 安裝 5.0.3 以上的版本，只要大於等於這個版本就安裝 \u0026#34;==5.0.3\u0026#34; # 僅安裝 5.0.3，不升級，這個就好！ 結論 # 本篇文章介紹了 Python 環境安裝、套件管理、虛擬環境與 VS Code 使用技巧，這些概念是學習 Python 及 Django 等框架的重要基礎。\n學習重點回顧：\npyenv 可用於管理多版本 Python。 venv 和 Poetry 讓專案環境更獨立。 pip 和 Poetry 幫助管理 Python 套件。 VS Code 提供便利的開發工具與快捷鍵。 希望這篇文章能幫助你順利開始 Python 開發旅程！\n","date":"17 November 2024","externalUrl":null,"permalink":"/douoduublog/posts/%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D-%E8%B8%8F%E5%85%A5python%E7%AC%AC%E4%B8%80%E6%AD%A5/","section":"文章","summary":"\u003chr\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e前言 \n    \u003cdiv id=\"%E5%89%8D%E8%A8%80\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e在進入 Python 領域之前，建議先安裝相關工具與套件，這樣可以邊學習邊實作，提高學習效率。本篇文章將介紹 Python 環境安裝的各種方式，適用於 \u003cstrong\u003emacOS 使用者\u003c/strong\u003e。\u003c/p\u003e","title":"環境安裝 - 踏入 Python 第一步","type":"posts"},{"content":"hi！我是小瑜 # 歡迎來到我的部落格◍•ᴗ•◍ 這邊主要分享一些攝影、旅遊、網頁學習等內容！ 以下是我的簡介\n自我介紹 # 我是個平面接案攝影師，曾任苗栗縣政府文化觀光局特約攝影師，我拍攝過學生各類服裝設計及棚內拍攝、婚禮攝影、商品攝影、時裝走秀，並且經常在台北時裝週出沒，喜好拍攝時尚、服裝類型，目前有認識的團隊是拍攝動態影片，有拍過廣告、MV、短影音等，經驗豐富，歡迎聯繫！\n另外，我曾經是個高鐵站務員，因為對科技業充滿好奇而離開。有到補習班學習全端程式設計，所以這邊也會分享一些菜鳥學習的內容，主要是我本身是個熱愛分享事物的人，所以創了這個 Blog 分享！若有任何問題歡迎聯繫。\n一、攝影服務 # 平面攝影 # 婚禮攝影 食物攝影 商品攝影 動態攝影 # 婚禮錄影 ＭＶ 廣告拍攝 短影音拍攝 二、軟體學習 # 前端 # Html/Css JavaScript HTMX Tailwind Vue 後端 # Python Django C# .NET 其他 # PostgreSQL Git 版本控制 GitHub 聯繫方式 # Email : selinafs880504@gmail.com 電話 : 0978-076262 GitHub : 連結 YouTube : 連結 ","date":"17 November 2024","externalUrl":null,"permalink":"/douoduublog/about/","section":"doudouu","summary":"\u003ch1 class=\"relative group\"\u003ehi！我是小瑜 \n    \u003cdiv id=\"hi%E6%88%91%E6%98%AF%E5%B0%8F%E7%91%9C\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#hi%E6%88%91%E6%98%AF%E5%B0%8F%E7%91%9C\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cimg src=\"img/小魚.jpg\" alt=\"me\" width=\"500px\"\u003e\n\u003ch3 style=\"color:#91B493\"\u003e\u003cstrong\u003e歡迎來到我的部落格◍•ᴗ•◍ \u003c/strong\u003e\u003c/h3\u003e\n這邊主要分享一些攝影、旅遊、網頁學習等內容！\n\u003cp style=\"color:#9B90C2 ; text-decoration:underline;\" \u003e\u003ca href=\"#me\"\u003e\u003cem\u003e以下是我的簡介\u003c/em\u003e\u003c/a\u003e\u003c/p\u003e","title":"about this blog","type":"page"},{"content":"","externalUrl":null,"permalink":"/douoduublog/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/douoduublog/series/","section":"Series","summary":"","title":"Series","type":"series"}]